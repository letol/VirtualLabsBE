POST http://localhost:8080/auth/register
Content-Type: application/json

{
  "id": "{{id}}",
  "lastname": "{{lastname}}",
  "firstname": "{{firstname}}",
  "password": "{{password}}",
  "email": "{{email}}"
}

###
POST http://localhost:8080/auth/login
Content-Type: application/json

{
  "username": "s222222",
  "password": "ps2"
}

> {%
if (response.status === 200) {
    client.global.set("auth_token", response.body.token);
}
 %}

###
POST http://localhost:8080/auth/login
Content-Type: application/json

{
  "username": "d111111",
  "password": "pd1"
}

> {%
if (response.status === 200) {
    client.global.set("auth_token", response.body.token);
}
 %}


###
# Add course 'c1'
# Hint: should be done by teacher1
POST http://localhost:8080/API/courses/
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "acronym": "c1",
  "name": "corso 1",
  "min": 2,
  "max": 4,
  "vcpu": 5,
  "disk": 10,
  "memory": 15,
  "maxVmInstance": 3,
  "maxRunningVmInstance": 1
}

###
# Get course 'c4'
GET http://localhost:8080/API/courses/10/enableCourse
Authorization: Bearer {{auth_token}}

###
# Enroll student 's444444' to 'c4'
POST http://localhost:8080/API/courses/5/enrollOne
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{auth_token}}

--WebAppBoundary
Content-Disposition: form-data; name="studentId"

s111111
--WebAppBoundary--


###
# Enroll student 's444444' to 'c4'
POST http://localhost:8080/API/courses/5/enrollOne
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{auth_token}}

--WebAppBoundary
Content-Disposition: form-data; name="studentId"

s222222
--WebAppBoundary--


###
# Add team1
# Hint: should be done by student1
POST http://localhost:8080/API/courses/11/teams
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "teamName": "team1",
  "deadline": 83289423974,
  "selectedStudentsId" :[
    "s111111",
    "s444444",
    "s222222"
]
}

###
# Delete course 'c4'
GET http://localhost:8080/API/courses/vmstatus
Authorization: Bearer {{auth_token}}

#Command vm
DELETE http://localhost:8080/API/courses/{{c4_id}}/teams/{{team_id}}/vmInstances/{{vm_id}}
Content-Type: application/json
Authorization: Bearer {{auth_token_student2}}


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
 %}